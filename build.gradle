apply from: "config.gradle"

group rootProject.ext.app.group
version rootProject.ext.app.version

buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springVersion = '4.3.16.RELEASE'
        springBootVersion = '1.5.12.RELEASE'
        springCloudVersion = 'Edgware.SR4'  // Finchley.RELEASE
        springCloudConsulVersion = '1.3.4.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

allprojects {
    apply plugin: 'idea'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'  // https://spring.io/guides/tutorials/spring-boot-kotlin/
    apply plugin: 'kotlin-spring'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    configurations {
        compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        compile.exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
        compile.exclude group: 'com.google.code.findbugs', module: 'jsr305'
        compile.exclude group: 'com.google.errorprone', module: 'error_prone_annotations'
        compile.exclude group: 'com.google.j2objc', module: 'j2objc-annotations'
        compile.exclude group: 'com.google.instrumentation', module: 'instrumentation-api'

        provided
    }

    sourceSets {
        main.compileClasspath += configurations.provided
        test.compileClasspath += configurations.provided
    }

    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    // https://docs.gradle.org/current/userguide/artifact_dependencies_tutorial.html
    // https://docs.gradle.org/current/userguide/dependency_management.html
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
            mavenBom "org.springframework.boot:spring-boot-starter-parent:$springBootVersion"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-consul-dependencies:${springCloudConsulVersion}"
        }
    }

    dependencies {
        compile rootProject.ext.dependencies['kotlin-stdlib-jdk8'],
                rootProject.ext.dependencies['kotlin-reflect']

        compile('com.google.guava:guava:20.0') {
            force = true
        }

        compileOnly rootProject.ext.dependencies['lombok']

        provided rootProject.ext.dependencies['javax-servlet-api']

        testCompile rootProject.ext.dependencies['junit']
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}
